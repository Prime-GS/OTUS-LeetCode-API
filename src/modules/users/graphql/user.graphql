type User {
  id: Int!
  firstName: String!
  lastName: String
  middleName: String
  fullName: String!
  email: String!
  roles: [String]
  createdAt: Date!
  updatedAt: Date!
}

type UsersResponse {
  data: [User!]!
  total: Int!
}

input UserInput {
  firstName: String!
  lastName: String
  middleName: String
  email: String!
  password: String!
  roles: [String]
}

input UpdateUserInput {
  id: Int!
  firstName: String
  lastName: String
  middleName: String
  email: String
  password: String
}

type Query {
  users(pagination: PaginationInput, filter: FilterInput): UsersResponse!
  user(id: Int!): User
}

type Mutation {
  createUser(input: UserInput!): User!
  updateUser(input: UpdateUserInput!): User!
  deleteUser(id: Int!): Boolean!
}
